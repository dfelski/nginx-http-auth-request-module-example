server {
  listen 8010;
  server_name _;

  #
  # status endpoint
  #
  location ~ ^/status {
      access_log off;
      # override content-type
      types { } default_type "text/plain";
      return 200 "OK\n";
  }

  location /private1/ {
    auth_request /auth_ok;
    auth_request_set $auth_status $upstream_status;
  }

  location /private2/ {
    auth_request /auth_unauthorized;
    auth_request_set $auth_status $upstream_status;
  }

  #
  # remote authentication endpoint
  #
  location = /auth_ok {
    internal;
    proxy_pass                http://auth-backend:8011/ok;
    proxy_pass_request_body   off;
    proxy_set_header          Content-Length "";
    proxy_set_header          X-Original-URI $request_uri;
  }

  location = /auth_unauthorized {
    internal;
    proxy_pass                http://auth-backend:8011/unauthorized;
    proxy_pass_request_body   off;
    proxy_set_header          Content-Length "";
    proxy_set_header          X-Original-URI $request_uri;
  }
}
